<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nmgepic.datacenter.mapper.QuestionMapper">
  <resultMap id="BaseResultMap" type="com.nmgepic.datacenter.model.Question">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="option_A" jdbcType="VARCHAR" property="optionA" />
    <result column="option_B" jdbcType="VARCHAR" property="optionB" />
    <result column="option_C" jdbcType="VARCHAR" property="optionC" />
    <result column="option_D" jdbcType="VARCHAR" property="optionD" />
    <result column="explain_A" jdbcType="VARCHAR" property="explainA" />
    <result column="explain_B" jdbcType="VARCHAR" property="explainB" />
    <result column="explain_C" jdbcType="VARCHAR" property="explainC" />
    <result column="explain_D" jdbcType="VARCHAR" property="explainD" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="topic_type" jdbcType="INTEGER" property="topicType" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, option_A, option_B, option_C, option_D, explain_A, explain_B, explain_C, 
    explain_D, answer, type, topic_type, grade
  </sql>
  <select id="selectByExample" parameterType="com.nmgepic.datacenter.model.QuestionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from question
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from question
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nmgepic.datacenter.model.QuestionExample">
    delete from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nmgepic.datacenter.model.Question">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into question (title, option_A, option_B, 
      option_C, option_D, explain_A, 
      explain_B, explain_C, explain_D, 
      answer, type, topic_type, 
      grade)
    values (#{title,jdbcType=VARCHAR}, #{optionA,jdbcType=VARCHAR}, #{optionB,jdbcType=VARCHAR}, 
      #{optionC,jdbcType=VARCHAR}, #{optionD,jdbcType=VARCHAR}, #{explainA,jdbcType=VARCHAR}, 
      #{explainB,jdbcType=VARCHAR}, #{explainC,jdbcType=VARCHAR}, #{explainD,jdbcType=VARCHAR}, 
      #{answer,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{topicType,jdbcType=INTEGER}, 
      #{grade,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.nmgepic.datacenter.model.Question">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="optionA != null">
        option_A,
      </if>
      <if test="optionB != null">
        option_B,
      </if>
      <if test="optionC != null">
        option_C,
      </if>
      <if test="optionD != null">
        option_D,
      </if>
      <if test="explainA != null">
        explain_A,
      </if>
      <if test="explainB != null">
        explain_B,
      </if>
      <if test="explainC != null">
        explain_C,
      </if>
      <if test="explainD != null">
        explain_D,
      </if>
      <if test="answer != null">
        answer,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="topicType != null">
        topic_type,
      </if>
      <if test="grade != null">
        grade,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="optionA != null">
        #{optionA,jdbcType=VARCHAR},
      </if>
      <if test="optionB != null">
        #{optionB,jdbcType=VARCHAR},
      </if>
      <if test="optionC != null">
        #{optionC,jdbcType=VARCHAR},
      </if>
      <if test="optionD != null">
        #{optionD,jdbcType=VARCHAR},
      </if>
      <if test="explainA != null">
        #{explainA,jdbcType=VARCHAR},
      </if>
      <if test="explainB != null">
        #{explainB,jdbcType=VARCHAR},
      </if>
      <if test="explainC != null">
        #{explainC,jdbcType=VARCHAR},
      </if>
      <if test="explainD != null">
        #{explainD,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="topicType != null">
        #{topicType,jdbcType=INTEGER},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nmgepic.datacenter.model.QuestionExample" resultType="java.lang.Long">
    select count(*) from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update question
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.optionA != null">
        option_A = #{record.optionA,jdbcType=VARCHAR},
      </if>
      <if test="record.optionB != null">
        option_B = #{record.optionB,jdbcType=VARCHAR},
      </if>
      <if test="record.optionC != null">
        option_C = #{record.optionC,jdbcType=VARCHAR},
      </if>
      <if test="record.optionD != null">
        option_D = #{record.optionD,jdbcType=VARCHAR},
      </if>
      <if test="record.explainA != null">
        explain_A = #{record.explainA,jdbcType=VARCHAR},
      </if>
      <if test="record.explainB != null">
        explain_B = #{record.explainB,jdbcType=VARCHAR},
      </if>
      <if test="record.explainC != null">
        explain_C = #{record.explainC,jdbcType=VARCHAR},
      </if>
      <if test="record.explainD != null">
        explain_D = #{record.explainD,jdbcType=VARCHAR},
      </if>
      <if test="record.answer != null">
        answer = #{record.answer,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.topicType != null">
        topic_type = #{record.topicType,jdbcType=INTEGER},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update question
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      option_A = #{record.optionA,jdbcType=VARCHAR},
      option_B = #{record.optionB,jdbcType=VARCHAR},
      option_C = #{record.optionC,jdbcType=VARCHAR},
      option_D = #{record.optionD,jdbcType=VARCHAR},
      explain_A = #{record.explainA,jdbcType=VARCHAR},
      explain_B = #{record.explainB,jdbcType=VARCHAR},
      explain_C = #{record.explainC,jdbcType=VARCHAR},
      explain_D = #{record.explainD,jdbcType=VARCHAR},
      answer = #{record.answer,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      topic_type = #{record.topicType,jdbcType=INTEGER},
      grade = #{record.grade,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nmgepic.datacenter.model.Question">
    update question
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="optionA != null">
        option_A = #{optionA,jdbcType=VARCHAR},
      </if>
      <if test="optionB != null">
        option_B = #{optionB,jdbcType=VARCHAR},
      </if>
      <if test="optionC != null">
        option_C = #{optionC,jdbcType=VARCHAR},
      </if>
      <if test="optionD != null">
        option_D = #{optionD,jdbcType=VARCHAR},
      </if>
      <if test="explainA != null">
        explain_A = #{explainA,jdbcType=VARCHAR},
      </if>
      <if test="explainB != null">
        explain_B = #{explainB,jdbcType=VARCHAR},
      </if>
      <if test="explainC != null">
        explain_C = #{explainC,jdbcType=VARCHAR},
      </if>
      <if test="explainD != null">
        explain_D = #{explainD,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="topicType != null">
        topic_type = #{topicType,jdbcType=INTEGER},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nmgepic.datacenter.model.Question">
    update question
    set title = #{title,jdbcType=VARCHAR},
      option_A = #{optionA,jdbcType=VARCHAR},
      option_B = #{optionB,jdbcType=VARCHAR},
      option_C = #{optionC,jdbcType=VARCHAR},
      option_D = #{optionD,jdbcType=VARCHAR},
      explain_A = #{explainA,jdbcType=VARCHAR},
      explain_B = #{explainB,jdbcType=VARCHAR},
      explain_C = #{explainC,jdbcType=VARCHAR},
      explain_D = #{explainD,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      topic_type = #{topicType,jdbcType=INTEGER},
      grade = #{grade,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>